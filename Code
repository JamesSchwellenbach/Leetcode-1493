class Solution: #beats 75.62% runtime, 11.96% Memory
    def longestSubarray(self, nums: List[int]) -> int:
        newList = [nums[0]]

        for i in range(1,len(nums)):
            if nums[i] == 0:
                newList.append(0)
            elif newList[-1] == 0:
                newList.append(1)
            else:
                newList[-1] += 1
        print(newList)
        if len(newList) == 1:
            return newList[0]-1
        best = 0
        for i in range(len(newList)):
            before, after = 0, 0
            if i > 0:
                before = newList[i-1]
            if i < len(newList) -1:
                after = newList[i+1]
            best = max(before+after, best)
        return best
